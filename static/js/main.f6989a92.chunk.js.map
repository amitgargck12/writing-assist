{"version":3,"sources":["components/CanvasComponent.jsx","App.js","components/Controls.jsx","serviceWorker.js","index.js"],"names":["CanvasComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lastX","lastY","letter","handleTouchStart","bind","assertThisInitialized","handleTouchMove","handleTouchEnd","handleCompare","can","document","getElementById","ctx","getContext","addEventListener","offsetLeft","offsetTop","font","fillStyle","textAlign","fillText","canvas","initialData","getImageData","width","height","console","log","x","y","size","_this$state","lineWidth","beginPath","moveTo","lineTo","stroke","arc","Math","PI","closePath","fill","setState","rowWidth","columnHeight","oldArray","data","isNotBlank","newArray","j","a","b","c","d","e","array","index","hasBeenDrawn","hasChanged","i","correctPixels","wrongPixels","totalExpectedPixels","newImageData","dataUpdated","oldIndex","putImageData","mouseIsDown","preventDefault","canX","targetTouches","pageX","canY","pageY","drawCurve","_this$props","react_default","createElement","onClick","id","style","backgroundColor","border","Component","App","className","CanvasComponent_CanvasComponent","window","innerHeight","innerWidth","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6989a92.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class CanvasComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { lastX: 0, lastY: 0, letter: props.letter };\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.handleCompare = this.handleCompare.bind(this);\n  }\n  componentDidMount() {\n    let can = document.getElementById(\"can\");\n    this.ctx = can.getContext(\"2d\");\n    can.addEventListener(\"touchstart\", this.handleTouchStart, false);\n    can.addEventListener(\"touchmove\", this.handleTouchMove, true);\n    can.addEventListener(\"touchend\", this.handleTouchEnd, false);\n    this.offsetLeft = can.offsetLeft;\n    this.offsetTop = can.offsetTop;\n    this.ctx.font = \"100px Learning Curve\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.textAlign = \"start\";\n    this.ctx.fillText(\"abcd  efgh\", 20, 90);\n    this.ctx.fillText(\"ijkl  mnop\", 20, 190);\n    this.ctx.fillText(\"qrst  uvwx\", 20, 290);\n    this.ctx.fillText(\"yz\", 20, 390);\n    this.canvas = can;\n    this.initialData = this.ctx.getImageData(0, 0, can.width, can.height);\n    console.log(this.canvas.width);\n  }\n  drawCurve(ctx, x, y, size) {\n    const { lastX, lastY } = this.state;\n    if (lastX && lastY && (x !== lastX || y !== lastY)) {\n      ctx.fillStyle = \"#000000\";\n      ctx.lineWidth = 2 * size;\n      ctx.beginPath();\n      ctx.moveTo(lastX, lastY);\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n    ctx.fillStyle = \"#000000\";\n    ctx.beginPath();\n    ctx.arc(x, y, size, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    this.setState({ lastX: x, lastY: y });\n  }\n  handleCompare() {\n    let rowWidth = this.canvas.width;\n    let columnHeight = this.canvas.height;\n    let oldArray = this.initialData.data;\n    function isColor(array, index, a, b, c, d, e) {\n      return (\n        array[index] === a &&\n        array[index + 1] === b &&\n        array[index + 2] === c &&\n        array[index + 3] >= d &&\n        array[index + 3] <= e\n      );\n    }\n    function isNotBlank(newArray, j) {\n      return !isColor(newArray, 4 * j, 0, 0, 0, 0, 0);\n    }\n    function hasBeenDrawn(newArray, j) {\n      return newArray[4 * j] < 255;\n    }\n    function hasChanged(i, j) {\n      let oldIndex = i * rowWidth * 4 + 4 * j;\n      return oldArray[oldIndex] > 0;\n    }\n    let correctPixels = 0;\n    let wrongPixels = 0;\n    let totalExpectedPixels = 0;\n    for (var i = 0; i < columnHeight; i++) {\n      let newImageData = this.ctx.getImageData(0, i, this.canvas.width, 1);\n      let newArray = newImageData.data;\n      //   console.log(newArray);\n      let dataUpdated = false;\n      for (var j = 0; j < rowWidth; j++) {\n        if (isNotBlank(newArray, j)) {\n          if (hasBeenDrawn(newArray, j)) {\n            if (hasChanged(i, j)) {\n              //Earlier was red\n              //Turn to Green\n              let oldIndex = i * rowWidth * 4 + 4 * j;\n              newArray[4 * j] = 0;\n              newArray[4 * j + 1] = 255;\n              newArray[4 * j + 2] = 0;\n              newArray[4 * j + 3] = oldArray[oldIndex + 3];\n              dataUpdated = true;\n              correctPixels++;\n              totalExpectedPixels++;\n            } else {\n              newArray[4 * j] = 0;\n              newArray[4 * j + 1] = 255;\n              newArray[4 * j + 3] = 30;\n              dataUpdated = true;\n              wrongPixels++;\n            }\n          } else {\n            totalExpectedPixels++;\n          }\n        }\n      }\n      if (dataUpdated) {\n        this.ctx.putImageData(newImageData, 0, i);\n      }\n    }\n    console.log(totalExpectedPixels, correctPixels, wrongPixels);\n  }\n  handleTouchStart(e) {\n    this.setState({ mouseIsDown: true });\n    this.handleTouchMove(e);\n  }\n  handleTouchMove(e) {\n    e.preventDefault();\n    let canX = e.targetTouches[0].pageX - this.offsetLeft;\n    let canY = e.targetTouches[0].pageY - this.offsetTop;\n    if (this.state.mouseIsDown) {\n      this.drawCurve(this.ctx, canX, canY, 3);\n    }\n  }\n  handleTouchEnd() {\n    this.setState({ mouseIsDown: false, lastX: 0, lastY: 0 });\n  }\n  render() {\n    const { height, width } = this.props;\n    return (\n      <div>\n        <div>\n          <button onClick={this.handleCompare}>Compare</button>\n        </div>\n        <canvas\n          id=\"can\"\n          height={height}\n          width={width}\n          style={{ backgroundColor: \"white\", border: \"1px solid blue\" }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CanvasComponent from \"./components/CanvasComponent\";\nimport Controls from './components/Controls'; \n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CanvasComponent letter=\"abcd efgh ijkl mnop qrst\" height={(window.innerHeight-60)} width={window.innerWidth}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\n\nexport default class Controls extends Component {\n  render() {\n    return (\n      <div className=\"controls\">\n        \n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}